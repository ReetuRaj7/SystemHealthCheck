import numpy as np
X=np.array(([2,9],[1,5],[3,6]),dtype=float)
y=np.array(([92],[86],[89]),dtype=float)
X=X/np.amax(X,axis=0)
y=y/100

def sigmoid(x):
  return 1/(1+np.exp(-x))

def d_sigmoid(x):
  return x*(1-x)

lr=0.1
epoch=5000
i_n=2
h_n=3
o_n=1

wh=np.random.uniform(size=(i_n,h_n))
bh=np.random.uniform(size=(1,h_n))
wout=np.random.uniform(size=(h_n,o_n))
bout=np.random.uniform(size=(1,o_n))

for i in range(epoch):
  hinp=np.dot(X,wh)+bh
  hlayer_act=sigmoid(hinp)
  outinp=np.dot(hlayer_act,wout)+bout
  output=sigmoid(outinp)

  outgrad=d_sigmoid(output)
  hiddengrad=d_sigmoid(hlayer_act)

  EO=y-output
  d_output=EO*outgrad

  EH=d_output.dot(wout.T)
  d_hiddenlayer=EH*hiddengrad

  wout += hlayer_act.T.dot(d_output) *lr
  wh += X.T.dot(d_hiddenlayer) *lr

print("Input \n"+str(X))
print("Actual Output \n"+str(y))
print("Pred. Op \n",output)

